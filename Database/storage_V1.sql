CREATE DATABASE STORAGE_DLHI
USE STORAGE_DLHI

GO
CREATE TABLE SUPPLIER (
	ID	UNIQUEIDENTIFIER NOT NULL,
	CODE CHAR(10),
	NAME_SUPPIER NVARCHAR(100),
	NAME_COMPANY_SUPPLIER NVARCHAR(MAX),
	ADDRESS NVARCHAR(MAX),
	PHONE CHAR(12),
	EMAIL NVARCHAR(MAX),
	NOTE NVARCHAR(MAX),

	CONSTRAINT PK_SUPPLIER PRIMARY KEY (ID),
)

GO
CREATE TABLE SUPPLIER_TYPE (
	ID UNIQUEIDENTIFIER NOT NULL,
	NAME NVARCHAR(20),

	CONSTRAINT PK_SUPPLIER_TYPES PRIMARY KEY (ID),
)

GO
CREATE TABLE UNIT (
	ID UNIQUEIDENTIFIER NOT NULL,
	NAME NVARCHAR(20),

	CONSTRAINT PK_UNIT PRIMARY KEY (ID),
)

GO
CREATE TABLE GROUPS (
	ID UNIQUEIDENTIFIER NOT NULL,
	NAME NVARCHAR(50),

	CONSTRAINT PK_GROUP_CONSUMABLE PRIMARY KEY (ID),
)

GO
CREATE TABLE TYPES (
	ID UNIQUEIDENTIFIER NOT NULL,
	NAME NVARCHAR(100),

	CONSTRAINT PK_TYPE_CONSUMABLE PRIMARY KEY (ID),
)

GO 
CREATE TABLE LOCATION_WAREHOUSE (
	ID UNIQUEIDENTIFIER NOT NULL,
	NAME NVARCHAR(MAX),

	CONSTRAINT PK_LOCATION_WAREHOUSE PRIMARY KEY (ID),
)


GO 
CREATE TABLE ITEM (
	ID UNIQUEIDENTIFIER NOT NULL,
	CODE CHAR(10),
	NAME NVARCHAR(100),
	PICTURE_LINK NVARCHAR(100),
	PICTURE VARBINARY(MAX),
	NOTE NVARCHAR(MAX),
	ENG_NAME NVARCHAR(MAX),
	
	UNIT_ID UNIQUEIDENTIFIER,
	GROUP_ID UNIQUEIDENTIFIER,
	TYPE_ID UNIQUEIDENTIFIER,
	SUPPLIER_ID UNIQUEIDENTIFIER,
	LOCATION_WAREHOUSE_ID UNIQUEIDENTIFIER,

	CONSTRAINT PK_CONSUMABLE PRIMARY KEY (ID),
	CONSTRAINT FK_COMSUMABLE_UNIT FOREIGN KEY (UNIT_ID) REFERENCES UNIT(ID),
	CONSTRAINT FK_COMSUMABLE_GROUP_CONSUMABLE FOREIGN KEY (GROUP_ID) REFERENCES GROUPS(ID),
	CONSTRAINT FK_COMSUMABLE_TYPE_CONSUMABLE FOREIGN KEY (TYPE_ID) REFERENCES TYPES(ID),
	CONSTRAINT FK_ITEM_SUPPLIER FOREIGN KEY (SUPPLIER_ID) REFERENCES SUPPLIER(ID),
	CONSTRAINT FK_ITEM_LOCATIONWAREHOUSE FOREIGN KEY (LOCATION_WAREHOUSE_ID) REFERENCES LOCATION_WAREHOUSE(ID),
)

GO
CREATE TABLE  MPR (
	ID UNIQUEIDENTIFIER NOT NULL,
	CREATED DATETIME,
	EXPECTED_DELIVERY DATETIME,
	NOTE NVARCHAR(MAX),
	ITEM_ID UNIQUEIDENTIFIER NOT NULL,
	MPR_NO NVARCHAR(100),
	USAGE NVARCHAR(MAX),
	QUANTITY INT,

	CONSTRAINT PK_MPR PRIMARY KEY (ID),
	CONSTRAINT FK_MPR_ITEM FOREIGN KEY (ITEM_ID) REFERENCES ITEM(ID),
)

GO
CREATE TABLE MPR_EXPORT (
	ID UNIQUEIDENTIFIER NOT NULL,
	CREATED DATETIME,
	ITEM_COUNT INT,
	STATUS INT, 
	-- 0: Exported MPR -> When Export -> Update status : 0
	-- 1: Do not exported but create new MPR_Export -> When check create new MPR_Export -> Get MPR have status is 2 -> Update = 1
	-- 2: Do not exported and do not create MPR_Export -> MPR_Export new will have status 2

	CONSTRAINT PK_MPR_EXPORT PRIMARY KEY (ID),
)

SET DATEFORMAT DMY INSERT INTO MPR_EXPORT VALUES ('', '', 1, 2)
SELECT *FROM MPR_EXPORT WHERE STATUS = 2
UPDATE MPR_EXPORT SET STATUS = 1 WHERE ID = ''

GO
CREATE TABLE MPR_EXPORT_DETAIL (
	MPR_EXPORT_ID UNIQUEIDENTIFIER NOT NULL,
	MPR_ID UNIQUEIDENTIFIER NOT NULL,

	CONSTRAINT PK_MPR_EXPORT_DETAIL PRIMARY KEY (MPR_EXPORT_ID, MPR_ID),
	CONSTRAINT FK_MPR_EXPORT_DETAIL_MPR_EXPORT FOREIGN KEY (MPR_EXPORT_ID) REFERENCES MPR_EXPORT(ID),
	CONSTRAINT FK_MPR_EXPORT_DETAIL_MPR FOREIGN KEY (MPR_ID) REFERENCES MPR(ID),
)

INSERT INTO MPR_EXPORT_DETAIL VALUES ('', '')
--UPDATE MPR_EXPORT SET ITEM_COUNT 
SELECT *FROM MPR_EXPORT_DETAIL WHERE MPR_EXPORT_ID = '9D70F742-CA22-4ACB-89B8-8CD8209475BF'

GO
CREATE TABLE PAYMENT_METHOD (
	ID UNIQUEIDENTIFIER NOT NULL,
	NAME NVARCHAR(MAX),

	CONSTRAINT PK_PAYMENT_METHOD PRIMARY KEY (ID),
)

GO
CREATE TABLE PO (
	ID UNIQUEIDENTIFIER NOT NULL,
	CREATED DATETIME,
	EXPECTED_DELIVERY DATETIME,
	TOTAL INT,

	SUPPLIER_ID UNIQUEIDENTIFIER,
	LOCATION_WAREHOUSE_ID UNIQUEIDENTIFIER,
	PAYMENT_METHOD_ID UNIQUEIDENTIFIER,

	CONSTRAINT PK_PO PRIMARY KEY (ID),
	CONSTRAINT FK_PO_SUPPLIER FOREIGN KEY (SUPPLIER_ID) REFERENCES SUPPLIER(ID),
	CONSTRAINT FK_PO_LOCATION_WAREHOUSE FOREIGN KEY (LOCATION_WAREHOUSE_ID) REFERENCES LOCATION_WAREHOUSE(ID),
	CONSTRAINT FK_PO_PAYMENT_METHOD FOREIGN KEY (PAYMENT_METHOD_ID) REFERENCES PAYMENT_METHOD(ID),
)

GO 
CREATE TABLE PO_DETAIL (
	PO_ID UNIQUEIDENTIFIER NOT NULL,
	ITEM_ID UNIQUEIDENTIFIER NOT NULL,
	MPR_NO NVARCHAR(MAX),
	PO_NO NVARCHAR(MAX),
	PRICE INT,
	QUANTITY INT,

	CONSTRAINT PK_PO_DETAIL PRIMARY KEY (PO_ID, ITEM_ID),
	CONSTRAINT FK_PO_DETIAL_PO FOREIGN KEY (PO_ID) REFERENCES PO(ID),
	CONSTRAINT FK_PO_DETAIL_ITEM FOREIGN KEY (ITEM_ID) REFERENCES ITEM(ID),
)

GO
CREATE TABLE IMPORT_ITEM (
	ID UNIQUEIDENTIFIER NOT NULL,
	CREATED DATETIME,
	BILL_NO NVARCHAR(MAX),
	QUANTITY INT,
	PRICE INT,
	TOTAL INT,

	SUPPLIER_ID UNIQUEIDENTIFIER,
	ITEM_ID UNIQUEIDENTIFIER,

	CONSTRAINT PK_IMPORT_ITEM PRIMARY KEY (ID),
	CONSTRAINT FK_IMPORT_ITEM_SUPPLIER FOREIGN KEY (SUPPLIER_ID) REFERENCES SUPPLIER(ID),
	CONSTRAINT FK_IMPORT_ITEM_ITEM FOREIGN KEY (ITEM_ID) REFERENCES ITEM(ID),
)

GO
CREATE TABLE EXPORT_ITEM (
	ID UNIQUEIDENTIFIER NOT NULL,
	CREATED DATETIME,
	BILL_NO NVARCHAR(MAX),
	QUANTITY INT,
	PRICE INT,
	TOTAL INT,

	SUPPLIER_ID UNIQUEIDENTIFIER,
	ITEM_ID UNIQUEIDENTIFIER,

	CONSTRAINT PK_EXPORT_ITEM PRIMARY KEY (ID),
	CONSTRAINT FK_EXPORT_ITEM_SUPPLIER FOREIGN KEY (SUPPLIER_ID) REFERENCES SUPPLIER(ID),
	CONSTRAINT FK_EXPORT_ITEM_ITEM FOREIGN KEY (ITEM_ID) REFERENCES ITEM(ID),
)


----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
-----------------------------PROCEDURE--------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------
GO
CREATE PROC GET_ITEMS
AS
BEGIN
	SELECT ITEM.ID, ITEM.CODE, ITEM.NAME, ITEM.PICTURE_LINK, ITEM.PICTURE,
			UNIT.NAME AS UNIT, GROUPS.NAME AS GROUPS, SUPPLIER.NAME_SUPPIER AS SUPPLIER, LOCATION_WAREHOUSE.NAME AS LOCATION_WAREHOUSE, ITEM.NOTE, ITEM.ENG_NAME
	FROM ITEM, UNIT, GROUPS, TYPES, SUPPLIER, LOCATION_WAREHOUSE
	WHERE ITEM.UNIT_ID = UNIT.ID 
			AND ITEM.GROUP_ID = GROUPS.ID 
			AND ITEM.SUPPLIER_ID = SUPPLIER.ID
			AND ITEM.LOCATION_WAREHOUSE_ID = LOCATION_WAREHOUSE.ID
END
GO
EXEC GET_ITEMS

----------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------

GO
CREATE PROC GET_ITEMS_V2
AS
BEGIN
	SELECT ITEM.ID, ITEM.CODE, ITEM.NAME, ITEM.PICTURE_LINK, ITEM.PICTURE,
			UNIT.NAME AS UNIT, GROUPS.NAME AS GROUPS, SUPPLIER.NAME_SUPPIER AS SUPPLIER, ITEM.NOTE, ITEM.ENG_NAME
	FROM ITEM, UNIT, GROUPS, TYPES, SUPPLIER, LOCATION_WAREHOUSE
	WHERE ITEM.UNIT_ID = UNIT.ID 
			AND ITEM.GROUP_ID = GROUPS.ID 
			AND ITEM.SUPPLIER_ID = SUPPLIER.ID
END
GO
EXEC GET_ITEMS_V2

----------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------
GO
CREATE PROC GET_CURRENT_CODE_SUPPLIER @KEY_CODE CHAR(3)
AS
BEGIN
	SELECT MAX(RIGHT(RTRIM(CODE), 7)) AS NUMBER FROM SUPPLIER 
	WHERE CODE LIKE @KEY_CODE + '%'
END
GO
EXEC GET_CURRENT_CODE_SUPPLIER 'CMA'

----------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------
GO
CREATE PROC GET_CURRENT_CODE_ITEM @KEY_CODE CHAR(6)
AS
BEGIN
	SELECT MAX(RIGHT(RTRIM(CODE), 4)) AS NUMBER FROM ITEM 
	WHERE CODE LIKE @KEY_CODE + '%'
END
GO
EXEC GET_CURRENT_CODE_ITEM ''

----------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------
GO
CREATE PROC	GET_MPR_LIST 
AS
BEGIN
	SELECT MPR.ID AS MPR_ID, ITEM.ID AS ITEM_ID, ITEM.CODE, ITEM.NAME, UNIT.NAME AS UNIT, ITEM.PICTURE, 
			MPR.USAGE, MPR.CREATED, MPR.QUANTITY, MPR.NOTE, MPR.MPR_NO
	FROM MPR, ITEM, UNIT
	WHERE MPR.ITEM_ID = ITEM.ID AND ITEM.UNIT_ID = UNIT.ID
END
GO
EXEC GET_MPR_LIST

----------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------
GO
CREATE PROC GET_MPR_EXPORT_DETAIL @ID UNIQUEIDENTIFIER
AS
BEGIN
	SELECT MPR.ID AS MPR_ID, ITEM.ID AS ITEM_ID, ITEM.CODE, ITEM.NAME, UNIT.NAME AS UNIT, ITEM.PICTURE, 
			MPR.USAGE, MPR.CREATED, MPR.QUANTITY, MPR.NOTE, MPR.MPR_NO
	FROM MPR, ITEM, UNIT
	WHERE MPR.ITEM_ID = ITEM.ID AND ITEM.UNIT_ID = UNIT.ID 
		AND MPR.ID IN (SELECT MPR_ID FROM MPR_EXPORT_DETAIL WHERE MPR_EXPORT_ID = @ID)
END
GO
EXEC GET_MPR_EXPORT_DETAIL '0F921F32-88F2-48B0-A3EE-D09AED4372B0'

----------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------
GO
CREATE PROC GET_MPR_EXPORT_DETAILS
AS
BEGIN
SELECT MPR.ID AS MPR_ID, ITEM.ID AS ITEM_ID, ITEM.CODE, ITEM.NAME, UNIT.NAME AS UNIT, ITEM.PICTURE, 
			MPR.USAGE, MPR.CREATED, MPR.QUANTITY, MPR.NOTE, MPR.MPR_NO, MPR_EXPORT_DETAIL.MPR_EXPORT_ID
	FROM MPR, ITEM, UNIT, MPR_EXPORT_DETAIL
	WHERE MPR.ITEM_ID = ITEM.ID AND ITEM.UNIT_ID = UNIT.ID 
		AND MPR.ID = MPR_EXPORT_DETAIL.MPR_ID
END
GO
EXEC GET_MPR_EXPORT_DETAILS

----------------------------------------------------------------------------------------------------
-------------------------------FUNCTION-------------------------------------------------------------
----------------------------------------------------------------------------------------------------